"use strict";const o=require("./gamepad-c98ea091.js"),n={gamepads:{},axeThreshold:[1],isReady:()=>navigator.getGamepads&&typeof navigator.getGamepads=="function"||navigator.getGamepads&&typeof navigator.webkitGetGamepads=="function"||!1,onConnect:new o.LiteEvent,onDisconnect:new o.LiteEvent,onBeforeCycle:new o.LiteEvent,onAfterCycle:new o.LiteEvent,getGamepads(){return this.gamepads},getGamepad(t){return this.gamepads[t]?this.gamepads[t]:null},checkStatus:()=>{const t=window.requestAnimationFrame||window.webkitRequestAnimationFrame,e=Object.keys(n.gamepads);n.onBeforeCycle.trigger();for(const a of e)n.gamepads[a].checkStatus();n.onAfterCycle.trigger(),e.length>0&&t(n.checkStatus)},init(){window.addEventListener("gamepadconnected",t=>{const e=t.gamepad||t.detail.gamepad;if(window.gamepads||(window.gamepads={}),e){if(!window.gamepads[e.index]){window.gamepads[e.index]=e;const a=o.gamepad.init(e);this.gamepads[a.id]=a,this.onConnect.trigger(this.gamepads[a.id])}Object.keys(this.gamepads).length===1&&this.checkStatus()}}),window.addEventListener("gamepaddisconnected",t=>{const e=t.gamepad||t.detail.gamepad;e&&(this.onDisconnect.trigger(this.gamepads[e.index]),delete window.gamepads[e.index],delete this.gamepads[e.index])})},on(t,e){switch(t){case"connect":this.onConnect.on(e);break;case"disconnect":this.onDisconnect.on(e);break;case"beforeCycle":this.onBeforeCycle.on(e);break;case"afterCycle":this.onAfterCycle.on(e);break;default:console.error("gamepad: unknown custom event");break}return this},off(t,e){switch(t){case"connect":this.onConnect.off(e);break;case"disconnect":this.onDisconnect.off(e);break;case"beforeCycle":this.onBeforeCycle.off(e);break;case"afterCycle":this.onAfterCycle.off(e);break;default:console.error("gamepad: unknown event");break}return this}};n.init();module.exports=n;
